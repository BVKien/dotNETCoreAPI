Application Programing Interface

GET: read
POST: add
PUT: update
PATCH: update
DELETE: delete

PUT: Yêu cầu PUT được sử dụng để cập nhật hoặc thay thế hoàn toàn một tài nguyên bằng dữ liệu được gửi kèm. 
Nếu tài nguyên không tồn tại, nó sẽ được tạo mới với nội dung được cung cấp. 
Yêu cầu PUT thường yêu cầu gửi toàn bộ thông tin của tài nguyên, kể cả những trường không thay đổi.

PATCH: Yêu cầu PATCH được sử dụng để cập nhật một phần của tài nguyên, 
chỉ thay đổi những thông tin được gửi kèm trong yêu cầu. 
Những trường không được cập nhật sẽ giữ nguyên giá trị. 
Yêu cầu PATCH thường gửi một hoặc một số trường dữ liệu mà bạn muốn cập nhật.

Test
200 OK – Trả về thành công cho tất cả phương thức
201 Created – Trả về khi một Resource được tạo thành công.
204 No Content – Trả về khi Resource xoá thành công.
304 Not Modified – Client có thể sử dụng dữ liệu cache.
400 Bad Request – Request không hợp lệ
401 Unauthorized – Request cần có auth.
403 Forbidden – bị từ chối không cho phép.
404 Not Found – Không tìm thấy resource từ URI.
405 Method Not Allowed – Phương thức không cho phép với user hiện tại.
410 Gone – Resource không còn tồn tại, Version cũ đã không còn hỗ trợ.
415 Unsupported Media Type – Không hỗ trợ kiểu Resource này.
422 Unprocessable Entity – Dữ liệu không được xác thực.
429 Too Many Requests – Request bị từ chối do bị giới hạn.

+ What is API?: 
https://www.youtube.com/watch?v=JUvsdFWL7WM
- Khái niệm: API là một tập hợp các commands, functions, protocols, objects, .... 
giúp 2 phần mềm(ứng dụng) có thể tương tác và trao đổi dữ liệu qua lại với nhau.

https://topdev.vn/blog/restful-api-la-gi/

+ Tutorials build WebAPI in 9 steps:
https://www.youtube.com/watch?v=Tj3qsKSNvMk
github: https://github.com/tutorialseu/asp-net-6-yt-rest-api

+ Tutorilas ASP.NET Core 5 Web API
https://www.youtube.com/watch?v=jruvMHTJLj4&list=PLE5Bje814fYbhdwSHiHN9rlwJlwJ2YD3t

+ web api? Toidicodedao: https://www.youtube.com/watch?v=fu3GuYFN1p8

+ somany knowledge: https://www.youtube.com/watch?v=TxgL1O0G_Yg

+ connect db to vs2022, web api: 
- https://www.youtube.com/watch?v=puCAD7zyRNk
- https://www.youtube.com/watch?v=BwACVHB9WYg


+ Step
1. Initialize dbcontext:
private readonly ApiDBContext dbcontext;

2. Constructor for Controllers
public PersonController(ApiDBContext context)
{
    this.dbcontext = context;
}

3. Code [HttpGet].... Api
        [HttpGet("/AllPerson")]
        public ActionResult<IEnumerable<Person>> Get()
        {
            var persons = dbcontext.People.ToList();
            return Ok(persons);
        }


+ Constructor 
- Khởi tạo đối tượng: Constructor tạo ra một đối tượng mới của lớp (instance) và khởi tạo nó với các giá trị ban đầu.
- Thiết lập giá trị ban đầu: Constructor thường được sử dụng để thiết lập giá trị ban đầu cho các biến thành viên (member variables) của lớp, giúp cho đối tượng có trạng thái khởi tạo đúng và phù hợp.
- Tương tác với tham số: Constructor có thể nhận tham số đầu vào (arguments) để thiết lập giá trị ban đầu dựa trên các giá trị được cung cấp từ bên ngoài.























